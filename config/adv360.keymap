/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        togEN_VI {
            bindings = <&kp LC(LEFT_SHIFT)>;
            key-positions = <49 50>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE     &kp N1            &kp N2              &kp N3          &kp N4          &kp N5  &tog 1                                                                                          &mo 3      &kp N6  &kp N7              &kp N8              &kp N9                &kp N0               &kp MINUS
&kp TAB       &kp Q             &kp W               &kp E           &kp R           &kp T   &none                                                                                           &none      &kp Y   &kp U               &kp I               &kp O                 &kp P                &kp BSLH
&lt 3 ESCAPE  &hm LEFT_SHIFT A  &hm LEFT_CONTROL S  &hm LEFT_ALT D  &hm LEFT_GUI F  &kp G   &kp LS(LA(LC(M)))  &kp LG(LS(KP_N4))  &kp C_BRIGHTNESS_INC      &kp C_VOLUME_UP    &kp RCTRL    &none      &kp H   &kp J               &kp K               &kp L                 &kp SEMI             &kp SQT
&kp LSHFT     &kp Z             &kp X               &kp C           &kp V           &kp B                                         &kp C_BRIGHTNESS_DEC      &kp C_VOLUME_DOWN                          &kp N   &hm LEFT_COMMAND M  &hm LEFT_ALT COMMA  &hm LEFT_CONTROL DOT  &hm LEFT_SHIFT FSLH  &kp BACKSPACE
&kp LCTRL     &none             &kp LEFT_ALT        &kp LEFT        &kp RIGHT               &kp LEFT_COMMAND   &kp EQUAL          &none                     &to 4              &lt 3 ENTER  &kp SPACE          &kp DOWN            &kp UP_ARROW        &kp LBKT              &kp RBKT             &kp LC(A)
            >;
        };

        layer_keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                   &mo 3      &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                    &none      &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp HOME      &kp PG_UP                        &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 2      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0          &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &mo 2
            >;
        };

        layer_fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 1                                      &mo 3   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                       &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
&none   &kp F1        &kp F2         &kp F3  &kp F4      &kp F5  &none                                                  &trans                  &kp F6  &kp F7      &kp F8        &kp F9     &kp F10  &kp F11
&none   &none         &none          &none   &none       &none   &bootloader                                            &bootloader             &none   &none       &kp UP_ARROW  &none      &none    &kp F12
&trans  &kp LA(LEFT)  &kp LA(RIGHT)  &none   &none       &none   &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none   &kp LEFT    &kp DOWN      &kp RIGHT  &none    &none
&trans  &none         &none          &none   &macro_ver  &none                       &none      &none                                           &none   &none       &none         &none      &none    &kp DELETE
&trans  &none         &none          &none   &none               &trans       &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                 &bl BL_INC  &bl BL_DEC    &none      &none    &none
            >;
        };

        bootApps {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
